   0  $accept : program $end

   1  program : opt_def_glob_var main

   2  glob_def : var_def
   3           | func_def

   4  opt_def_glob_var : opt_def_glob_var glob_def
   5                   |

   6  var_def : p_type list_ident ';'
   7          | array list_ident ';'
   8          | struct_type list_ident ';'

   9  local_var_def : var_def

  10  opt_list_local_var : opt_list_local_var local_var_def
  11                     |

  12  opt_list_fields : opt_list_fields type list_ident ';'
  13                  |

  14  struct_type : STRUCT '{' opt_list_fields '}'

  15  main : VOID MAIN '(' ')' '{' opt_list_local_var statements '}'

  16  func_def : p_type ID '(' opt_list_param ')' '{' opt_list_local_var statements '}'
  17           | VOID ID '(' opt_list_param ')' '{' opt_list_local_var statements '}'

  18  list_param : list_param ',' p_type ID
  19             | p_type ID

  20  opt_list_param : list_param
  21                 |

  22  p_type : INT
  23         | DOUBLE
  24         | CHAR

  25  array : type '[' INT_CONSTANT ']'

  26  type : p_type
  27       | array
  28       | struct_type

  29  list_ident : list_ident ',' ID
  30             | ID

  31  statements : statements statement
  32             |

  33  statement : RETURN exp ';'
  34            | READ list_exp ';'
  35            | WRITE list_exp ';'
  36            | if_else
  37            | while
  38            | exp '=' exp ';'
  39            | ID '(' opt_list_exp ')' ';'
  40            | ternario

  41  statement_sin : RETURN exp
  42                | READ list_exp
  43                | WRITE list_exp
  44                | if_else
  45                | while
  46                | exp '=' exp
  47                | ID '(' opt_list_exp ')'
  48                | ternario

  49  ternario : '(' exp ')' '?' statement_sin ':' statement_sin ';'
  50           | exp '=' '(' exp ')' '?' exp ':' exp ';'

  51  while : WHILE '(' exp ')' '{' statements '}'
  52        | WHILE '(' exp ')' statement

  53  if_else : IF '(' exp ')' '{' statements '}' ELSE '{' statements '}'
  54          | IF '(' exp ')' '{' statements '}' ELSE statement
  55          | IF '(' exp ')' statement ELSE '{' statements '}'
  56          | IF '(' exp ')' statement ELSE statement
  57          | IF '(' exp ')' '{' statements '}'
  58          | IF '(' exp ')' statement

  59  opt_list_exp : list_exp
  60               |

  61  list_exp : list_exp ',' exp
  62           | exp

  63  exp : exp '+' exp
  64      | exp '*' exp
  65      | exp '/' exp
  66      | exp '-' exp
  67      | exp '%' exp
  68      | exp EQ exp
  69      | exp NOT_EQ exp
  70      | exp '>' exp
  71      | exp '<' exp
  72      | exp L_EQ exp
  73      | exp G_EQ exp
  74      | exp AND exp
  75      | exp OR exp
  76      | '(' p_type ')' exp
  77      | exp '[' exp ']'
  78      | exp '.' ID
  79      | ID '(' opt_list_exp ')'
  80      | '-' exp
  81      | '(' exp ')'
  82      | '!' exp
  83      | INT_CONSTANT
  84      | ID
  85      | CHAR_CONSTANT
  86      | REAL_CONSTANT

state 0
	$accept : . program $end  (0)
	opt_def_glob_var : .  (5)

	.  reduce 5

	program  goto 1
	opt_def_glob_var  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : opt_def_glob_var . main  (1)
	opt_def_glob_var : opt_def_glob_var . glob_def  (4)

	VOID  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	INT  shift 7
	.  error

	main  goto 8
	glob_def  goto 9
	var_def  goto 10
	func_def  goto 11
	p_type  goto 12
	array  goto 13
	struct_type  goto 14
	type  goto 15


state 3
	main : VOID . MAIN '(' ')' '{' opt_list_local_var statements '}'  (15)
	func_def : VOID . ID '(' opt_list_param ')' '{' opt_list_local_var statements '}'  (17)

	ID  shift 16
	MAIN  shift 17
	.  error


state 4
	p_type : DOUBLE .  (23)

	.  reduce 23


state 5
	p_type : CHAR .  (24)

	.  reduce 24


state 6
	struct_type : STRUCT . '{' opt_list_fields '}'  (14)

	'{'  shift 18
	.  error


state 7
	p_type : INT .  (22)

	.  reduce 22


state 8
	program : opt_def_glob_var main .  (1)

	.  reduce 1


state 9
	opt_def_glob_var : opt_def_glob_var glob_def .  (4)

	.  reduce 4


state 10
	glob_def : var_def .  (2)

	.  reduce 2


state 11
	glob_def : func_def .  (3)

	.  reduce 3


state 12
	var_def : p_type . list_ident ';'  (6)
	func_def : p_type . ID '(' opt_list_param ')' '{' opt_list_local_var statements '}'  (16)
	type : p_type .  (26)

	ID  shift 19
	'['  reduce 26

	list_ident  goto 20


state 13
	var_def : array . list_ident ';'  (7)
	type : array .  (27)

	ID  shift 21
	'['  reduce 27

	list_ident  goto 22


state 14
	var_def : struct_type . list_ident ';'  (8)
	type : struct_type .  (28)

	ID  shift 21
	'['  reduce 28

	list_ident  goto 23


state 15
	array : type . '[' INT_CONSTANT ']'  (25)

	'['  shift 24
	.  error


state 16
	func_def : VOID ID . '(' opt_list_param ')' '{' opt_list_local_var statements '}'  (17)

	'('  shift 25
	.  error


state 17
	main : VOID MAIN . '(' ')' '{' opt_list_local_var statements '}'  (15)

	'('  shift 26
	.  error


state 18
	struct_type : STRUCT '{' . opt_list_fields '}'  (14)
	opt_list_fields : .  (13)

	.  reduce 13

	opt_list_fields  goto 27


state 19
	func_def : p_type ID . '(' opt_list_param ')' '{' opt_list_local_var statements '}'  (16)
	list_ident : ID .  (30)

	'('  shift 28
	';'  reduce 30
	','  reduce 30


state 20
	var_def : p_type list_ident . ';'  (6)
	list_ident : list_ident . ',' ID  (29)

	';'  shift 29
	','  shift 30
	.  error


state 21
	list_ident : ID .  (30)

	.  reduce 30


state 22
	var_def : array list_ident . ';'  (7)
	list_ident : list_ident . ',' ID  (29)

	';'  shift 31
	','  shift 30
	.  error


state 23
	var_def : struct_type list_ident . ';'  (8)
	list_ident : list_ident . ',' ID  (29)

	';'  shift 32
	','  shift 30
	.  error


state 24
	array : type '[' . INT_CONSTANT ']'  (25)

	INT_CONSTANT  shift 33
	.  error


state 25
	func_def : VOID ID '(' . opt_list_param ')' '{' opt_list_local_var statements '}'  (17)
	opt_list_param : .  (21)

	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	')'  reduce 21

	p_type  goto 34
	opt_list_param  goto 35
	list_param  goto 36


state 26
	main : VOID MAIN '(' . ')' '{' opt_list_local_var statements '}'  (15)

	')'  shift 37
	.  error


state 27
	opt_list_fields : opt_list_fields . type list_ident ';'  (12)
	struct_type : STRUCT '{' opt_list_fields . '}'  (14)

	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	INT  shift 7
	'}'  shift 38
	.  error

	p_type  goto 39
	array  goto 40
	struct_type  goto 41
	type  goto 42


state 28
	func_def : p_type ID '(' . opt_list_param ')' '{' opt_list_local_var statements '}'  (16)
	opt_list_param : .  (21)

	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	')'  reduce 21

	p_type  goto 34
	opt_list_param  goto 43
	list_param  goto 36


state 29
	var_def : p_type list_ident ';' .  (6)

	.  reduce 6


state 30
	list_ident : list_ident ',' . ID  (29)

	ID  shift 44
	.  error


state 31
	var_def : array list_ident ';' .  (7)

	.  reduce 7


state 32
	var_def : struct_type list_ident ';' .  (8)

	.  reduce 8


state 33
	array : type '[' INT_CONSTANT . ']'  (25)

	']'  shift 45
	.  error


state 34
	list_param : p_type . ID  (19)

	ID  shift 46
	.  error


state 35
	func_def : VOID ID '(' opt_list_param . ')' '{' opt_list_local_var statements '}'  (17)

	')'  shift 47
	.  error


state 36
	list_param : list_param . ',' p_type ID  (18)
	opt_list_param : list_param .  (20)

	','  shift 48
	')'  reduce 20


state 37
	main : VOID MAIN '(' ')' . '{' opt_list_local_var statements '}'  (15)

	'{'  shift 49
	.  error


state 38
	struct_type : STRUCT '{' opt_list_fields '}' .  (14)

	.  reduce 14


state 39
	type : p_type .  (26)

	.  reduce 26


state 40
	type : array .  (27)

	.  reduce 27


state 41
	type : struct_type .  (28)

	.  reduce 28


state 42
	opt_list_fields : opt_list_fields type . list_ident ';'  (12)
	array : type . '[' INT_CONSTANT ']'  (25)

	ID  shift 21
	'['  shift 24
	.  error

	list_ident  goto 50


state 43
	func_def : p_type ID '(' opt_list_param . ')' '{' opt_list_local_var statements '}'  (16)

	')'  shift 51
	.  error


state 44
	list_ident : list_ident ',' ID .  (29)

	.  reduce 29


state 45
	array : type '[' INT_CONSTANT ']' .  (25)

	.  reduce 25


state 46
	list_param : p_type ID .  (19)

	.  reduce 19


state 47
	func_def : VOID ID '(' opt_list_param ')' . '{' opt_list_local_var statements '}'  (17)

	'{'  shift 52
	.  error


state 48
	list_param : list_param ',' . p_type ID  (18)

	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	.  error

	p_type  goto 53


state 49
	main : VOID MAIN '(' ')' '{' . opt_list_local_var statements '}'  (15)
	opt_list_local_var : .  (11)

	.  reduce 11

	opt_list_local_var  goto 54


state 50
	opt_list_fields : opt_list_fields type list_ident . ';'  (12)
	list_ident : list_ident . ',' ID  (29)

	';'  shift 55
	','  shift 30
	.  error


state 51
	func_def : p_type ID '(' opt_list_param ')' . '{' opt_list_local_var statements '}'  (16)

	'{'  shift 56
	.  error


state 52
	func_def : VOID ID '(' opt_list_param ')' '{' . opt_list_local_var statements '}'  (17)
	opt_list_local_var : .  (11)

	.  reduce 11

	opt_list_local_var  goto 57


state 53
	list_param : list_param ',' p_type . ID  (18)

	ID  shift 58
	.  error


state 54
	opt_list_local_var : opt_list_local_var . local_var_def  (10)
	main : VOID MAIN '(' ')' '{' opt_list_local_var . statements '}'  (15)
	statements : .  (32)

	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	INT  shift 7
	INT_CONSTANT  reduce 32
	REAL_CONSTANT  reduce 32
	RETURN  reduce 32
	ID  reduce 32
	WRITE  reduce 32
	IF  reduce 32
	READ  reduce 32
	WHILE  reduce 32
	CHAR_CONSTANT  reduce 32
	'!'  reduce 32
	'-'  reduce 32
	'('  reduce 32
	'}'  reduce 32

	var_def  goto 59
	p_type  goto 60
	array  goto 13
	struct_type  goto 14
	local_var_def  goto 61
	type  goto 15
	statements  goto 62


state 55
	opt_list_fields : opt_list_fields type list_ident ';' .  (12)

	.  reduce 12


state 56
	func_def : p_type ID '(' opt_list_param ')' '{' . opt_list_local_var statements '}'  (16)
	opt_list_local_var : .  (11)

	.  reduce 11

	opt_list_local_var  goto 63


state 57
	opt_list_local_var : opt_list_local_var . local_var_def  (10)
	func_def : VOID ID '(' opt_list_param ')' '{' opt_list_local_var . statements '}'  (17)
	statements : .  (32)

	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	INT  shift 7
	INT_CONSTANT  reduce 32
	REAL_CONSTANT  reduce 32
	RETURN  reduce 32
	ID  reduce 32
	WRITE  reduce 32
	IF  reduce 32
	READ  reduce 32
	WHILE  reduce 32
	CHAR_CONSTANT  reduce 32
	'!'  reduce 32
	'-'  reduce 32
	'('  reduce 32
	'}'  reduce 32

	var_def  goto 59
	p_type  goto 60
	array  goto 13
	struct_type  goto 14
	local_var_def  goto 61
	type  goto 15
	statements  goto 64


state 58
	list_param : list_param ',' p_type ID .  (18)

	.  reduce 18


state 59
	local_var_def : var_def .  (9)

	.  reduce 9


state 60
	var_def : p_type . list_ident ';'  (6)
	type : p_type .  (26)

	ID  shift 21
	'['  reduce 26

	list_ident  goto 20


state 61
	opt_list_local_var : opt_list_local_var local_var_def .  (10)

	.  reduce 10


state 62
	main : VOID MAIN '(' ')' '{' opt_list_local_var statements . '}'  (15)
	statements : statements . statement  (31)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 77
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 63
	opt_list_local_var : opt_list_local_var . local_var_def  (10)
	func_def : p_type ID '(' opt_list_param ')' '{' opt_list_local_var . statements '}'  (16)
	statements : .  (32)

	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	INT  shift 7
	INT_CONSTANT  reduce 32
	REAL_CONSTANT  reduce 32
	RETURN  reduce 32
	ID  reduce 32
	WRITE  reduce 32
	IF  reduce 32
	READ  reduce 32
	WHILE  reduce 32
	CHAR_CONSTANT  reduce 32
	'!'  reduce 32
	'-'  reduce 32
	'('  reduce 32
	'}'  reduce 32

	var_def  goto 59
	p_type  goto 60
	array  goto 13
	struct_type  goto 14
	local_var_def  goto 61
	type  goto 15
	statements  goto 83


state 64
	func_def : VOID ID '(' opt_list_param ')' '{' opt_list_local_var statements . '}'  (17)
	statements : statements . statement  (31)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 84
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 65
	exp : INT_CONSTANT .  (83)

	.  reduce 83


state 66
	exp : REAL_CONSTANT .  (86)

	.  reduce 86


state 67
	statement : RETURN . exp ';'  (33)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 87


state 68
	statement : ID . '(' opt_list_exp ')' ';'  (39)
	exp : ID . '(' opt_list_exp ')'  (79)
	exp : ID .  (84)

	'('  shift 88
	EQ  reduce 84
	OR  reduce 84
	AND  reduce 84
	NOT_EQ  reduce 84
	G_EQ  reduce 84
	L_EQ  reduce 84
	'='  reduce 84
	'>'  reduce 84
	'<'  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	'%'  reduce 84
	'['  reduce 84
	'.'  reduce 84


state 69
	statement : WRITE . list_exp ';'  (35)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 89
	list_exp  goto 90


state 70
	if_else : IF . '(' exp ')' '{' statements '}' ELSE '{' statements '}'  (53)
	if_else : IF . '(' exp ')' '{' statements '}' ELSE statement  (54)
	if_else : IF . '(' exp ')' statement ELSE '{' statements '}'  (55)
	if_else : IF . '(' exp ')' statement ELSE statement  (56)
	if_else : IF . '(' exp ')' '{' statements '}'  (57)
	if_else : IF . '(' exp ')' statement  (58)

	'('  shift 91
	.  error


state 71
	statement : READ . list_exp ';'  (34)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 89
	list_exp  goto 92


state 72
	while : WHILE . '(' exp ')' '{' statements '}'  (51)
	while : WHILE . '(' exp ')' statement  (52)

	'('  shift 93
	.  error


state 73
	exp : CHAR_CONSTANT .  (85)

	.  reduce 85


state 74
	exp : '!' . exp  (82)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 94


state 75
	exp : '-' . exp  (80)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 95


state 76
	ternario : '(' . exp ')' '?' statement_sin ':' statement_sin ';'  (49)
	exp : '(' . p_type ')' exp  (76)
	exp : '(' . exp ')'  (81)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	p_type  goto 96
	exp  goto 97


state 77
	main : VOID MAIN '(' ')' '{' opt_list_local_var statements '}' .  (15)

	.  reduce 15


state 78
	statements : statements statement .  (31)

	.  reduce 31


state 79
	statement : exp . '=' exp ';'  (38)
	ternario : exp . '=' '(' exp ')' '?' exp ':' exp ';'  (50)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'='  shift 104
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	.  error


state 80
	statement : if_else .  (36)

	.  reduce 36


state 81
	statement : while .  (37)

	.  reduce 37


state 82
	statement : ternario .  (40)

	.  reduce 40


state 83
	func_def : p_type ID '(' opt_list_param ')' '{' opt_list_local_var statements . '}'  (16)
	statements : statements . statement  (31)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 114
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 84
	func_def : VOID ID '(' opt_list_param ')' '{' opt_list_local_var statements '}' .  (17)

	.  reduce 17


state 85
	exp : ID . '(' opt_list_exp ')'  (79)
	exp : ID .  (84)

	'('  shift 115
	EQ  reduce 84
	OR  reduce 84
	AND  reduce 84
	NOT_EQ  reduce 84
	G_EQ  reduce 84
	L_EQ  reduce 84
	'='  reduce 84
	'>'  reduce 84
	'<'  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	'%'  reduce 84
	'['  reduce 84
	']'  reduce 84
	'.'  reduce 84
	')'  reduce 84
	';'  reduce 84
	','  reduce 84
	':'  reduce 84


state 86
	exp : '(' . p_type ')' exp  (76)
	exp : '(' . exp ')'  (81)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	p_type  goto 96
	exp  goto 116


state 87
	statement : RETURN exp . ';'  (33)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	';'  shift 117
	.  error


state 88
	statement : ID '(' . opt_list_exp ')' ';'  (39)
	exp : ID '(' . opt_list_exp ')'  (79)
	opt_list_exp : .  (60)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	')'  reduce 60

	exp  goto 89
	list_exp  goto 118
	opt_list_exp  goto 119


state 89
	list_exp : exp .  (62)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  reduce 62
	';'  reduce 62
	','  reduce 62
	':'  reduce 62


state 90
	statement : WRITE list_exp . ';'  (35)
	list_exp : list_exp . ',' exp  (61)

	';'  shift 120
	','  shift 121
	.  error


state 91
	if_else : IF '(' . exp ')' '{' statements '}' ELSE '{' statements '}'  (53)
	if_else : IF '(' . exp ')' '{' statements '}' ELSE statement  (54)
	if_else : IF '(' . exp ')' statement ELSE '{' statements '}'  (55)
	if_else : IF '(' . exp ')' statement ELSE statement  (56)
	if_else : IF '(' . exp ')' '{' statements '}'  (57)
	if_else : IF '(' . exp ')' statement  (58)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 122


state 92
	statement : READ list_exp . ';'  (34)
	list_exp : list_exp . ',' exp  (61)

	';'  shift 123
	','  shift 121
	.  error


state 93
	while : WHILE '(' . exp ')' '{' statements '}'  (51)
	while : WHILE '(' . exp ')' statement  (52)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 124


state 94
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)
	exp : '!' exp .  (82)

	EQ  shift 98
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	OR  reduce 82
	AND  reduce 82
	'='  reduce 82
	']'  reduce 82
	')'  reduce 82
	';'  reduce 82
	','  reduce 82
	':'  reduce 82


state 95
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)
	exp : '-' exp .  (80)

	'['  shift 112
	'.'  shift 113
	EQ  reduce 80
	OR  reduce 80
	AND  reduce 80
	NOT_EQ  reduce 80
	G_EQ  reduce 80
	L_EQ  reduce 80
	'='  reduce 80
	'>'  reduce 80
	'<'  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'*'  reduce 80
	'/'  reduce 80
	'%'  reduce 80
	']'  reduce 80
	')'  reduce 80
	';'  reduce 80
	','  reduce 80
	':'  reduce 80


state 96
	exp : '(' p_type . ')' exp  (76)

	')'  shift 125
	.  error


state 97
	ternario : '(' exp . ')' '?' statement_sin ':' statement_sin ';'  (49)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)
	exp : '(' exp . ')'  (81)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  shift 126
	.  error


state 98
	exp : exp EQ . exp  (68)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 127


state 99
	exp : exp OR . exp  (75)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 128


state 100
	exp : exp AND . exp  (74)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 129


state 101
	exp : exp NOT_EQ . exp  (69)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 130


state 102
	exp : exp G_EQ . exp  (73)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 131


state 103
	exp : exp L_EQ . exp  (72)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 132


state 104
	statement : exp '=' . exp ';'  (38)
	ternario : exp '=' . '(' exp ')' '?' exp ':' exp ';'  (50)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 133
	.  error

	exp  goto 134


state 105
	exp : exp '>' . exp  (70)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 135


state 106
	exp : exp '<' . exp  (71)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 136


state 107
	exp : exp '+' . exp  (63)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 137


state 108
	exp : exp '-' . exp  (66)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 138


state 109
	exp : exp '*' . exp  (64)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 139


state 110
	exp : exp '/' . exp  (65)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 140


state 111
	exp : exp '%' . exp  (67)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 141


state 112
	exp : exp '[' . exp ']'  (77)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 142


state 113
	exp : exp '.' . ID  (78)

	ID  shift 143
	.  error


state 114
	func_def : p_type ID '(' opt_list_param ')' '{' opt_list_local_var statements '}' .  (16)

	.  reduce 16


state 115
	exp : ID '(' . opt_list_exp ')'  (79)
	opt_list_exp : .  (60)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	')'  reduce 60

	exp  goto 89
	list_exp  goto 118
	opt_list_exp  goto 144


state 116
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)
	exp : '(' exp . ')'  (81)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  shift 145
	.  error


state 117
	statement : RETURN exp ';' .  (33)

	.  reduce 33


state 118
	opt_list_exp : list_exp .  (59)
	list_exp : list_exp . ',' exp  (61)

	','  shift 121
	')'  reduce 59


state 119
	statement : ID '(' opt_list_exp . ')' ';'  (39)
	exp : ID '(' opt_list_exp . ')'  (79)

	')'  shift 146
	.  error


state 120
	statement : WRITE list_exp ';' .  (35)

	.  reduce 35


state 121
	list_exp : list_exp ',' . exp  (61)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 147


state 122
	if_else : IF '(' exp . ')' '{' statements '}' ELSE '{' statements '}'  (53)
	if_else : IF '(' exp . ')' '{' statements '}' ELSE statement  (54)
	if_else : IF '(' exp . ')' statement ELSE '{' statements '}'  (55)
	if_else : IF '(' exp . ')' statement ELSE statement  (56)
	if_else : IF '(' exp . ')' '{' statements '}'  (57)
	if_else : IF '(' exp . ')' statement  (58)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  shift 148
	.  error


state 123
	statement : READ list_exp ';' .  (34)

	.  reduce 34


state 124
	while : WHILE '(' exp . ')' '{' statements '}'  (51)
	while : WHILE '(' exp . ')' statement  (52)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  shift 149
	.  error


state 125
	exp : '(' p_type ')' . exp  (76)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 150


state 126
	ternario : '(' exp ')' . '?' statement_sin ':' statement_sin ';'  (49)
	exp : '(' exp ')' .  (81)

	'?'  shift 151
	EQ  reduce 81
	OR  reduce 81
	AND  reduce 81
	NOT_EQ  reduce 81
	G_EQ  reduce 81
	L_EQ  reduce 81
	'='  reduce 81
	'>'  reduce 81
	'<'  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'['  reduce 81
	'.'  reduce 81


state 127
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp EQ exp .  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 68
	OR  reduce 68
	AND  reduce 68
	NOT_EQ  reduce 68
	'='  reduce 68
	']'  reduce 68
	')'  reduce 68
	';'  reduce 68
	','  reduce 68
	':'  reduce 68


state 128
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp OR exp .  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	OR  reduce 75
	AND  reduce 75
	'='  reduce 75
	']'  reduce 75
	')'  reduce 75
	';'  reduce 75
	','  reduce 75
	':'  reduce 75


state 129
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp AND exp .  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	OR  reduce 74
	AND  reduce 74
	'='  reduce 74
	']'  reduce 74
	')'  reduce 74
	';'  reduce 74
	','  reduce 74
	':'  reduce 74


state 130
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp NOT_EQ exp .  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 69
	OR  reduce 69
	AND  reduce 69
	NOT_EQ  reduce 69
	'='  reduce 69
	']'  reduce 69
	')'  reduce 69
	';'  reduce 69
	','  reduce 69
	':'  reduce 69


state 131
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp G_EQ exp .  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 73
	OR  reduce 73
	AND  reduce 73
	NOT_EQ  reduce 73
	G_EQ  reduce 73
	L_EQ  reduce 73
	'='  reduce 73
	'>'  reduce 73
	'<'  reduce 73
	']'  reduce 73
	')'  reduce 73
	';'  reduce 73
	','  reduce 73
	':'  reduce 73


state 132
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp L_EQ exp .  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 72
	OR  reduce 72
	AND  reduce 72
	NOT_EQ  reduce 72
	G_EQ  reduce 72
	L_EQ  reduce 72
	'='  reduce 72
	'>'  reduce 72
	'<'  reduce 72
	']'  reduce 72
	')'  reduce 72
	';'  reduce 72
	','  reduce 72
	':'  reduce 72


state 133
	ternario : exp '=' '(' . exp ')' '?' exp ':' exp ';'  (50)
	exp : '(' . p_type ')' exp  (76)
	exp : '(' . exp ')'  (81)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	DOUBLE  shift 4
	CHAR  shift 5
	INT  shift 7
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	p_type  goto 96
	exp  goto 152


state 134
	statement : exp '=' exp . ';'  (38)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	';'  shift 153
	.  error


state 135
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp '>' exp .  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 70
	OR  reduce 70
	AND  reduce 70
	NOT_EQ  reduce 70
	G_EQ  reduce 70
	L_EQ  reduce 70
	'='  reduce 70
	'>'  reduce 70
	'<'  reduce 70
	']'  reduce 70
	')'  reduce 70
	';'  reduce 70
	','  reduce 70
	':'  reduce 70


state 136
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp '<' exp .  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 71
	OR  reduce 71
	AND  reduce 71
	NOT_EQ  reduce 71
	G_EQ  reduce 71
	L_EQ  reduce 71
	'='  reduce 71
	'>'  reduce 71
	'<'  reduce 71
	']'  reduce 71
	')'  reduce 71
	';'  reduce 71
	','  reduce 71
	':'  reduce 71


state 137
	exp : exp . '+' exp  (63)
	exp : exp '+' exp .  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 63
	OR  reduce 63
	AND  reduce 63
	NOT_EQ  reduce 63
	G_EQ  reduce 63
	L_EQ  reduce 63
	'='  reduce 63
	'>'  reduce 63
	'<'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	']'  reduce 63
	')'  reduce 63
	';'  reduce 63
	','  reduce 63
	':'  reduce 63


state 138
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp '-' exp .  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	EQ  reduce 66
	OR  reduce 66
	AND  reduce 66
	NOT_EQ  reduce 66
	G_EQ  reduce 66
	L_EQ  reduce 66
	'='  reduce 66
	'>'  reduce 66
	'<'  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	']'  reduce 66
	')'  reduce 66
	';'  reduce 66
	','  reduce 66
	':'  reduce 66


state 139
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp '*' exp .  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'['  shift 112
	'.'  shift 113
	EQ  reduce 64
	OR  reduce 64
	AND  reduce 64
	NOT_EQ  reduce 64
	G_EQ  reduce 64
	L_EQ  reduce 64
	'='  reduce 64
	'>'  reduce 64
	'<'  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	']'  reduce 64
	')'  reduce 64
	';'  reduce 64
	','  reduce 64
	':'  reduce 64


state 140
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp '/' exp .  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'['  shift 112
	'.'  shift 113
	EQ  reduce 65
	OR  reduce 65
	AND  reduce 65
	NOT_EQ  reduce 65
	G_EQ  reduce 65
	L_EQ  reduce 65
	'='  reduce 65
	'>'  reduce 65
	'<'  reduce 65
	'+'  reduce 65
	'-'  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	'%'  reduce 65
	']'  reduce 65
	')'  reduce 65
	';'  reduce 65
	','  reduce 65
	':'  reduce 65


state 141
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp '%' exp .  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'['  shift 112
	'.'  shift 113
	EQ  reduce 67
	OR  reduce 67
	AND  reduce 67
	NOT_EQ  reduce 67
	G_EQ  reduce 67
	L_EQ  reduce 67
	'='  reduce 67
	'>'  reduce 67
	'<'  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	']'  reduce 67
	')'  reduce 67
	';'  reduce 67
	','  reduce 67
	':'  reduce 67


state 142
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp '[' exp . ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	']'  shift 154
	'.'  shift 113
	.  error


state 143
	exp : exp '.' ID .  (78)

	.  reduce 78


state 144
	exp : ID '(' opt_list_exp . ')'  (79)

	')'  shift 155
	.  error


state 145
	exp : '(' exp ')' .  (81)

	.  reduce 81


state 146
	statement : ID '(' opt_list_exp ')' . ';'  (39)
	exp : ID '(' opt_list_exp ')' .  (79)

	';'  shift 156
	EQ  reduce 79
	OR  reduce 79
	AND  reduce 79
	NOT_EQ  reduce 79
	G_EQ  reduce 79
	L_EQ  reduce 79
	'='  reduce 79
	'>'  reduce 79
	'<'  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	'['  reduce 79
	'.'  reduce 79


state 147
	list_exp : list_exp ',' exp .  (61)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  reduce 61
	';'  reduce 61
	','  reduce 61
	':'  reduce 61


state 148
	if_else : IF '(' exp ')' . '{' statements '}' ELSE '{' statements '}'  (53)
	if_else : IF '(' exp ')' . '{' statements '}' ELSE statement  (54)
	if_else : IF '(' exp ')' . statement ELSE '{' statements '}'  (55)
	if_else : IF '(' exp ')' . statement ELSE statement  (56)
	if_else : IF '(' exp ')' . '{' statements '}'  (57)
	if_else : IF '(' exp ')' . statement  (58)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'{'  shift 157
	.  error

	statement  goto 158
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 149
	while : WHILE '(' exp ')' . '{' statements '}'  (51)
	while : WHILE '(' exp ')' . statement  (52)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'{'  shift 159
	.  error

	statement  goto 160
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 150
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : '(' p_type ')' exp .  (76)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	'['  shift 112
	'.'  shift 113
	EQ  reduce 76
	OR  reduce 76
	AND  reduce 76
	NOT_EQ  reduce 76
	G_EQ  reduce 76
	L_EQ  reduce 76
	'='  reduce 76
	'>'  reduce 76
	'<'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'%'  reduce 76
	']'  reduce 76
	')'  reduce 76
	';'  reduce 76
	','  reduce 76
	':'  reduce 76


state 151
	ternario : '(' exp ')' '?' . statement_sin ':' statement_sin ';'  (49)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 161
	ID  shift 162
	WRITE  shift 163
	IF  shift 70
	READ  shift 164
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	.  error

	exp  goto 165
	if_else  goto 166
	while  goto 167
	ternario  goto 168
	statement_sin  goto 169


state 152
	ternario : exp '=' '(' exp . ')' '?' exp ':' exp ';'  (50)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)
	exp : '(' exp . ')'  (81)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	')'  shift 170
	.  error


state 153
	statement : exp '=' exp ';' .  (38)

	.  reduce 38


state 154
	exp : exp '[' exp ']' .  (77)

	.  reduce 77


state 155
	exp : ID '(' opt_list_exp ')' .  (79)

	.  reduce 79


state 156
	statement : ID '(' opt_list_exp ')' ';' .  (39)

	.  reduce 39


state 157
	if_else : IF '(' exp ')' '{' . statements '}' ELSE '{' statements '}'  (53)
	if_else : IF '(' exp ')' '{' . statements '}' ELSE statement  (54)
	if_else : IF '(' exp ')' '{' . statements '}'  (57)
	statements : .  (32)

	.  reduce 32

	statements  goto 171


state 158
	if_else : IF '(' exp ')' statement . ELSE '{' statements '}'  (55)
	if_else : IF '(' exp ')' statement . ELSE statement  (56)
	if_else : IF '(' exp ')' statement .  (58)

	ELSE  shift 172
	INT_CONSTANT  reduce 58
	REAL_CONSTANT  reduce 58
	RETURN  reduce 58
	ID  reduce 58
	WRITE  reduce 58
	IF  reduce 58
	READ  reduce 58
	WHILE  reduce 58
	CHAR_CONSTANT  reduce 58
	'!'  reduce 58
	'-'  reduce 58
	'('  reduce 58
	';'  reduce 58
	'}'  reduce 58
	':'  reduce 58


state 159
	while : WHILE '(' exp ')' '{' . statements '}'  (51)
	statements : .  (32)

	.  reduce 32

	statements  goto 173


state 160
	while : WHILE '(' exp ')' statement .  (52)

	.  reduce 52


state 161
	statement_sin : RETURN . exp  (41)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 174


state 162
	statement_sin : ID . '(' opt_list_exp ')'  (47)
	exp : ID . '(' opt_list_exp ')'  (79)
	exp : ID .  (84)

	'('  shift 175
	EQ  reduce 84
	OR  reduce 84
	AND  reduce 84
	NOT_EQ  reduce 84
	G_EQ  reduce 84
	L_EQ  reduce 84
	'='  reduce 84
	'>'  reduce 84
	'<'  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	'%'  reduce 84
	'['  reduce 84
	'.'  reduce 84


state 163
	statement_sin : WRITE . list_exp  (43)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 89
	list_exp  goto 176


state 164
	statement_sin : READ . list_exp  (42)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 89
	list_exp  goto 177


state 165
	statement_sin : exp . '=' exp  (46)
	ternario : exp . '=' '(' exp ')' '?' exp ':' exp ';'  (50)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'='  shift 178
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	.  error


state 166
	statement_sin : if_else .  (44)

	.  reduce 44


state 167
	statement_sin : while .  (45)

	.  reduce 45


state 168
	statement_sin : ternario .  (48)

	.  reduce 48


state 169
	ternario : '(' exp ')' '?' statement_sin . ':' statement_sin ';'  (49)

	':'  shift 179
	.  error


state 170
	ternario : exp '=' '(' exp ')' . '?' exp ':' exp ';'  (50)
	exp : '(' exp ')' .  (81)

	'?'  shift 180
	EQ  reduce 81
	OR  reduce 81
	AND  reduce 81
	NOT_EQ  reduce 81
	G_EQ  reduce 81
	L_EQ  reduce 81
	'>'  reduce 81
	'<'  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'['  reduce 81
	'.'  reduce 81
	';'  reduce 81
	':'  reduce 81


state 171
	statements : statements . statement  (31)
	if_else : IF '(' exp ')' '{' statements . '}' ELSE '{' statements '}'  (53)
	if_else : IF '(' exp ')' '{' statements . '}' ELSE statement  (54)
	if_else : IF '(' exp ')' '{' statements . '}'  (57)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 181
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 172
	if_else : IF '(' exp ')' statement ELSE . '{' statements '}'  (55)
	if_else : IF '(' exp ')' statement ELSE . statement  (56)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'{'  shift 182
	.  error

	statement  goto 183
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 173
	statements : statements . statement  (31)
	while : WHILE '(' exp ')' '{' statements . '}'  (51)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 184
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 174
	statement_sin : RETURN exp .  (41)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	';'  reduce 41
	':'  reduce 41


state 175
	statement_sin : ID '(' . opt_list_exp ')'  (47)
	exp : ID '(' . opt_list_exp ')'  (79)
	opt_list_exp : .  (60)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	')'  reduce 60

	exp  goto 89
	list_exp  goto 118
	opt_list_exp  goto 185


state 176
	statement_sin : WRITE list_exp .  (43)
	list_exp : list_exp . ',' exp  (61)

	','  shift 121
	';'  reduce 43
	':'  reduce 43


state 177
	statement_sin : READ list_exp .  (42)
	list_exp : list_exp . ',' exp  (61)

	','  shift 121
	';'  reduce 42
	':'  reduce 42


state 178
	statement_sin : exp '=' . exp  (46)
	ternario : exp '=' . '(' exp ')' '?' exp ':' exp ';'  (50)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 133
	.  error

	exp  goto 186


state 179
	ternario : '(' exp ')' '?' statement_sin ':' . statement_sin ';'  (49)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 161
	ID  shift 162
	WRITE  shift 163
	IF  shift 70
	READ  shift 164
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	.  error

	exp  goto 165
	if_else  goto 166
	while  goto 167
	ternario  goto 168
	statement_sin  goto 187


state 180
	ternario : exp '=' '(' exp ')' '?' . exp ':' exp ';'  (50)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 188


state 181
	if_else : IF '(' exp ')' '{' statements '}' . ELSE '{' statements '}'  (53)
	if_else : IF '(' exp ')' '{' statements '}' . ELSE statement  (54)
	if_else : IF '(' exp ')' '{' statements '}' .  (57)

	ELSE  shift 189
	INT_CONSTANT  reduce 57
	REAL_CONSTANT  reduce 57
	RETURN  reduce 57
	ID  reduce 57
	WRITE  reduce 57
	IF  reduce 57
	READ  reduce 57
	WHILE  reduce 57
	CHAR_CONSTANT  reduce 57
	'!'  reduce 57
	'-'  reduce 57
	'('  reduce 57
	';'  reduce 57
	'}'  reduce 57
	':'  reduce 57


state 182
	if_else : IF '(' exp ')' statement ELSE '{' . statements '}'  (55)
	statements : .  (32)

	.  reduce 32

	statements  goto 190


state 183
	if_else : IF '(' exp ')' statement ELSE statement .  (56)

	.  reduce 56


state 184
	while : WHILE '(' exp ')' '{' statements '}' .  (51)

	.  reduce 51


state 185
	statement_sin : ID '(' opt_list_exp . ')'  (47)
	exp : ID '(' opt_list_exp . ')'  (79)

	')'  shift 191
	.  error


state 186
	statement_sin : exp '=' exp .  (46)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	';'  reduce 46
	':'  reduce 46


state 187
	ternario : '(' exp ')' '?' statement_sin ':' statement_sin . ';'  (49)

	';'  shift 192
	.  error


state 188
	ternario : exp '=' '(' exp ')' '?' exp . ':' exp ';'  (50)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	':'  shift 193
	.  error


state 189
	if_else : IF '(' exp ')' '{' statements '}' ELSE . '{' statements '}'  (53)
	if_else : IF '(' exp ')' '{' statements '}' ELSE . statement  (54)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'{'  shift 194
	.  error

	statement  goto 195
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 190
	statements : statements . statement  (31)
	if_else : IF '(' exp ')' statement ELSE '{' statements . '}'  (55)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 196
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 191
	statement_sin : ID '(' opt_list_exp ')' .  (47)
	exp : ID '(' opt_list_exp ')' .  (79)

	EQ  reduce 79
	OR  reduce 79
	AND  reduce 79
	NOT_EQ  reduce 79
	G_EQ  reduce 79
	L_EQ  reduce 79
	'='  reduce 79
	'>'  reduce 79
	'<'  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	'['  reduce 79
	'.'  reduce 79
	';'  reduce 47
	':'  reduce 47


state 192
	ternario : '(' exp ')' '?' statement_sin ':' statement_sin ';' .  (49)

	.  reduce 49


state 193
	ternario : exp '=' '(' exp ')' '?' exp ':' . exp ';'  (50)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	ID  shift 85
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 86
	.  error

	exp  goto 197


state 194
	if_else : IF '(' exp ')' '{' statements '}' ELSE '{' . statements '}'  (53)
	statements : .  (32)

	.  reduce 32

	statements  goto 198


state 195
	if_else : IF '(' exp ')' '{' statements '}' ELSE statement .  (54)

	.  reduce 54


state 196
	if_else : IF '(' exp ')' statement ELSE '{' statements '}' .  (55)

	.  reduce 55


state 197
	ternario : exp '=' '(' exp ')' '?' exp ':' exp . ';'  (50)
	exp : exp . '+' exp  (63)
	exp : exp . '*' exp  (64)
	exp : exp . '/' exp  (65)
	exp : exp . '-' exp  (66)
	exp : exp . '%' exp  (67)
	exp : exp . EQ exp  (68)
	exp : exp . NOT_EQ exp  (69)
	exp : exp . '>' exp  (70)
	exp : exp . '<' exp  (71)
	exp : exp . L_EQ exp  (72)
	exp : exp . G_EQ exp  (73)
	exp : exp . AND exp  (74)
	exp : exp . OR exp  (75)
	exp : exp . '[' exp ']'  (77)
	exp : exp . '.' ID  (78)

	EQ  shift 98
	OR  shift 99
	AND  shift 100
	NOT_EQ  shift 101
	G_EQ  shift 102
	L_EQ  shift 103
	'>'  shift 105
	'<'  shift 106
	'+'  shift 107
	'-'  shift 108
	'*'  shift 109
	'/'  shift 110
	'%'  shift 111
	'['  shift 112
	'.'  shift 113
	';'  shift 199
	.  error


state 198
	statements : statements . statement  (31)
	if_else : IF '(' exp ')' '{' statements '}' ELSE '{' statements . '}'  (53)

	INT_CONSTANT  shift 65
	REAL_CONSTANT  shift 66
	RETURN  shift 67
	ID  shift 68
	WRITE  shift 69
	IF  shift 70
	READ  shift 71
	WHILE  shift 72
	CHAR_CONSTANT  shift 73
	'!'  shift 74
	'-'  shift 75
	'('  shift 76
	'}'  shift 200
	.  error

	statement  goto 78
	exp  goto 79
	if_else  goto 80
	while  goto 81
	ternario  goto 82


state 199
	ternario : exp '=' '(' exp ')' '?' exp ':' exp ';' .  (50)

	.  reduce 50


state 200
	if_else : IF '(' exp ')' '{' statements '}' ELSE '{' statements '}' .  (53)

	.  reduce 53


50 terminals, 26 nonterminals
87 grammar rules, 201 states
